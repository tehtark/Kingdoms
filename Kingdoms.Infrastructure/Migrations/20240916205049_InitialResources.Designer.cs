// <auto-generated />
using System;
using Kingdoms.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kingdoms.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240916205049_InitialResources")]
    partial class InitialResources
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kingdoms.Domain.Entities.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ConstructionDuration")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ConstructionStartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HoldingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsConstructed")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HoldingId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("Kingdoms.Domain.Entities.Holding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlayerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Holdings");
                });

            modelBuilder.Entity("Kingdoms.Domain.Entities.Player", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Kingdoms.Domain.Entities.Resources", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HoldingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Iron")
                        .HasColumnType("int");

                    b.Property<int>("Stone")
                        .HasColumnType("int");

                    b.Property<int>("Wood")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HoldingId")
                        .IsUnique();

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("Kingdoms.Domain.Entities.Building", b =>
                {
                    b.HasOne("Kingdoms.Domain.Entities.Holding", null)
                        .WithMany("Buildings")
                        .HasForeignKey("HoldingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Kingdoms.Domain.Entities.Resources", b =>
                {
                    b.HasOne("Kingdoms.Domain.Entities.Holding", null)
                        .WithOne("Resources")
                        .HasForeignKey("Kingdoms.Domain.Entities.Resources", "HoldingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Kingdoms.Domain.Entities.Holding", b =>
                {
                    b.Navigation("Buildings");

                    b.Navigation("Resources")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
